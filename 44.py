#Pentagonal numbers are generated by the formula, Pn=n(3n−1)/2. The first ten pentagonal numbers are:
#1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...
#It can be seen that P4 + P7 = 22 + 70 = 92 = P8. However, their difference, 70 − 22 = 48,
# is not pentagonal.
#Find the pair of pentagonal numbers, Pj and Pk, for which their sum and difference are pentagonal
# and D = |Pk − Pj| is minimised; what is the value of D?

import math

max_num = 10000

def getPentagonals():
    output = []
    for x in range(1, max_num+1):
        output.append(x*(3*x-1)/2)
    return output

def isPentagonal(num):
    try:
        return ((1/6)*(math.sqrt(24*num+1)+1)).is_integer()
    except:
        print("error", num)

pentagonals = getPentagonals()

min_x = 0
min_y = 0
min_diff = max_num ** 3
print("flag")
for x in range(1, max_num-1):
    for y in range(x+1, max_num):
        diff = pentagonals[y]-pentagonals[x]
        sum = pentagonals[x]+pentagonals[y]
        if isPentagonal(diff) and isPentagonal(sum) and diff < min_diff:
            min_diff = diff
            min_x = x
            min_y = y
print(min_x, pentagonals[min_x], min_y, pentagonals[min_y], min_diff)